<data enableBatchRequests="true" name="SampleManagerDS" transports="http https local">
   <config enableOData="false" id="SampleManagerDB">
      <property name="driverClassName">org.postgresql.Driver</property>
      <property name="url">jdbc:postgresql://172.17.61.5:5433/sample_manager</property>
      <property name="username">postgres</property>
      <property name="password">siu*2016</property>
   </config>
   <query id="GetRequests" useConfig="SampleManagerDB">
      <sql>SELECT r.id, r.request_status_id, r.crop_id,r.service_id, r.ticket_number, r.user_id, r.subservice_id, r.comments, to_char(creation_timestamp,'YYYY-MM-DD HH:MI:SS') as creation_date,(select count(1) from sm.entity_request where request_id = r.id) as entities, u.name as first_name, last_name FROM sm.request r inner join master.user u on r.user_id = u.id where :statusId in (0, request_status_id) and :cropId in (0, crop_id) and :serviceId in (0, service_id) limit 30 offset 30 * :page</sql>
      <result outputType="json">{ "entities": { "requests": [{ "id": "$id", "ticketNumber": "$ticket_number","userId":"$user_id","subserviceId":"$subservice_id", "comments": "$comments", "creationDate":"$creation_date","totalEntities":"$entities","firstName":"$first_name","lastName":"$last_name","serviceId":"$service_id","cropId":"$crop_id","statusId":"$request_status_id"} ] }}</result>
      <param name="statusId" optional="false" sqlType="INTEGER"/>
      <param name="cropId" optional="false" sqlType="INTEGER"/>
      <param name="page" optional="false" sqlType="INTEGER"/>
      <param name="serviceId" optional="false" sqlType="INTEGER"/>
   </query>
   <query id="GetEntitiesByRequestId" useConfig="SampleManagerDB">
      <sql>select id,name,entity_type_id,germplasm_id from sm.entity e inner join sm.entity_request er on er.entity_id = e.id and er.request_id = :requestId</sql>
      <result outputType="json">{ "entities": { "requestEntities": [{ "id": "$id","name":"$name","germplasmId":"$germplasm_id","typeId":"$entity_type_id" } ] }}</result>
      <param name="requestId" sqlType="INTEGER"/>
   </query>
   <query id="UpdateRequestStatus" useConfig="SampleManagerDB">
      <sql>update sm.request set request_status_id = :statusId where id = :requestId</sql>
      <param name="statusId" sqlType="INTEGER"/>
      <param name="requestId" sqlType="INTEGER"/>
   </query>
   <query id="GetServices" useConfig="SampleManagerDB">
      <sql>select id,name from sm.service</sql>
      <result outputType="json">{&#xd; "entities": {&#xd; "services": [&#xd; { "id": "$id", "name": "$name" }&#xd; ]&#xd; }&#xd;}</result>
   </query>
   <query id="GetSubservices" useConfig="SampleManagerDB">
      <sql>select id,name from sm.subservice</sql>
      <result outputType="json">{&#xd; "entities": {&#xd; "subservices": [&#xd; {&#xd; "id": "$id", "name": "$name"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
   </query>
   <query id="GetCrops" useConfig="SampleManagerDB">
      <sql>select id,name from master.crop</sql>
      <result outputType="json">{&#xd; "entries": {&#xd; "crop": [&#xd; {&#xd; "id": "$id",&#xd; "name": "$name"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
   </query>
   <query id="GetEntityTypes" useConfig="SampleManagerDB">
      <sql>select id,name from sm.entity_type</sql>
      <result outputType="json">{&#xd; "entities": {"entityTypeEntities": [&#xd; {&#xd; "id": "$id",&#xd; "name": "$name"&#xd; }]}}</result>
   </query>
   <resource method="GET" path="/requests">
      <call-query href="GetRequests">
         <with-param name="statusId" query-param="statusId"/>
         <with-param name="cropId" query-param="cropId"/>
         <with-param name="page" query-param="page"/>
         <with-param name="serviceId" query-param="serviceId"/>
      </call-query>
   </resource>
   <resource method="GET" path="/requests/{requestId}/entities">
      <call-query href="GetEntitiesByRequestId">
         <with-param name="requestId" query-param="requestId"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/requests" returnRequestStatus="true">
      <call-query href="UpdateRequestStatus">
         <with-param name="statusId" query-param="statusId"/>
         <with-param name="requestId" query-param="requestId"/>
      </call-query>
   </resource>
   <resource method="GET" path="/services">
      <call-query href="GetServices"/>
   </resource>
   <resource method="GET" path="/subservices">
      <call-query href="GetSubservices"/>
   </resource>
   <resource method="GET" path="/crops">
      <call-query href="GetCrops"/>
   </resource>
   <resource method="GET" path="/entityTypes">
      <call-query href="GetEntityTypes"/>
   </resource>
</data>
